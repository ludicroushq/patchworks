name: "patchworks"
description: "sync your repository with updates from its template source"
author: "ludicrous"

inputs:
  patchworks-package:
    description: |
      Package spec to install via npx (e.g. patchworks@latest or https://pkg.pr.new/org/patchworks@sha)
    default: patchworks@latest

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Run Patchworks update
      shell: bash
      run: |
        set -euo pipefail
        PACKAGE_SPEC="${{ inputs.patchworks-package }}"
        if [ -z "$PACKAGE_SPEC" ]; then
          PACKAGE_SPEC="patchworks@latest"
        fi
        npx --yes -p "$PACKAGE_SPEC" patchworks update --report patchworks-output.json
    - name: Collect Patchworks metadata
      id: patchworks
      shell: bash
      run: |
        set -euo pipefail
        if [ ! -f patchworks-output.json ]; then
          echo "has_changes=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi
        npx --yes tsx "$GITHUB_ACTION_PATH/scripts/write-github-output.ts" patchworks-output.json
    - name: Create or update Patchworks pull request
      if: steps.patchworks.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ github.token }}
        branch: patchworks/update
        base: ${{ github.ref_name }}
        commit-message: ${{ steps.patchworks.outputs.commit_message }}
        title: ${{ steps.patchworks.outputs.pr_title }}
        body: ${{ steps.patchworks.outputs.pr_body }}
        author: Patchworks <bot@patchworks.dev>
        committer: Patchworks <bot@patchworks.dev>
        branch-suffix: 'none'

branding:
  icon: "copy"
  color: "green"
