name: "Patchworks Sync"
description: "Sync your repository with updates from its template source"
author: "Ludicrous HQ"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ github.token }}
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      shell: bash
      run: npm install -g zx octokit simple-git

    - name: Configure Git
      shell: bash
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Check for existing PRs
      id: check-prs
      shell: bash
      run: |
        if gh pr list --head "patchworks-" --json number | grep -q number; then
          echo "skip-pr=true" >> $GITHUB_OUTPUT
          echo "Found existing Patchworks PR. Skipping."
        else
          echo "skip-pr=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run Patchworks update
      id: update
      if: steps.check-prs.outputs.skip-pr != 'true'
      shell: bash
      run: |
        # Clone the source repository
        CONFIG_FILE=".patchworks.json"

        if [ ! -f "$CONFIG_FILE" ]; then
          echo "Config file not found"
          exit 1
        fi

        SOURCE_REPO=$(jq -r '.sourceRepo' "$CONFIG_FILE")
        SOURCE_BRANCH=$(jq -r '.sourceBranch' "$CONFIG_FILE")
        LAST_SYNCED_COMMIT=$(jq -r '.lastSyncedCommit' "$CONFIG_FILE")

        echo "Fetching from source repository: $SOURCE_REPO ($SOURCE_BRANCH)"

        # Extract repo owner/name from URL
        REPO_PATH=$(echo "$SOURCE_REPO" | sed -e 's|https://github.com/||' -e 's|/$||')

        # Create temp dir
        TEMP_DIR=$(mktemp -d)

        # Clone with token
        git clone --branch "$SOURCE_BRANCH" --single-branch "https://x-access-token:$GITHUB_TOKEN@github.com/$REPO_PATH.git" "$TEMP_DIR"

        # Get latest commit
        cd "$TEMP_DIR"
        LATEST_COMMIT=$(git rev-parse HEAD)
        cd - > /dev/null

        if [ "$LATEST_COMMIT" = "$LAST_SYNCED_COMMIT" ]; then
          echo "Already up to date with source repository."
          echo "skip-pr=true" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Generate diff
        cd "$TEMP_DIR"
        git diff "$LAST_SYNCED_COMMIT" HEAD > /tmp/patchworks.diff
        cd - > /dev/null

        if [ ! -s /tmp/patchworks.diff ]; then
          echo "No changes to sync."
          echo "skip-pr=true" >> $GITHUB_OUTPUT
          exit 0
        fi

        # Apply the diff
        echo "Applying changes..."
        if ! git apply --reject --whitespace=fix /tmp/patchworks.diff; then
          echo "Some changes could not be applied cleanly. Check .rej files for conflicts."
        fi

        # Update config with new commit hash
        jq --arg commit "$LATEST_COMMIT" '.lastSyncedCommit = $commit' "$CONFIG_FILE" > "$CONFIG_FILE.tmp"
        mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"

        # Create short commit hashes for PR description
        SHORT_OLD=$(echo "$LAST_SYNCED_COMMIT" | cut -c1-7)
        SHORT_NEW=$(echo "$LATEST_COMMIT" | cut -c1-7)

        # Create PR description
        echo "PR_TITLE=[Patchworks] Sync changes from template" >> $GITHUB_OUTPUT
        echo "PR_BODY<<EOF" >> $GITHUB_OUTPUT
        echo "This PR was automatically created by Patchworks." >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "Updates from template repository:" >> $GITHUB_OUTPUT
        echo "- From: \`$SHORT_OLD\`" >> $GITHUB_OUTPUT
        echo "- To: \`$SHORT_NEW\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "<details>" >> $GITHUB_OUTPUT
        echo "<summary>View Changes</summary>" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo '```diff' >> $GITHUB_OUTPUT
        cat /tmp/patchworks.diff >> $GITHUB_OUTPUT
        echo '```' >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "</details>" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - uses: peter-evans/create-pull-request@v6
      if: steps.update.outputs.skip-pr != 'true'
      with:
        token: ${{ github.token }}
        commit-message: "[Patchworks] Sync changes from template"
        title: ${{ steps.update.outputs.PR_TITLE }}
        body: ${{ steps.update.outputs.PR_BODY }}
        branch: patchworks-update
        delete-branch: true

branding:
  icon: "git-pull-request"
  color: "blue"
